# This file was generated by WPML
# WPML is a WordPress plugin that can turn any WordPress or WordPressMU site into a full featured multilingual content management system.
# http://wpml.org
msgid ""
msgstr ""
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Project-Id-Version: \n"
"POT-Creation-Date: \n"
"PO-Revision-Date: \n"
"Last-Translator: \n"
"Language-Team: \n"
"MIME-Version: 1.0\n"

# <article id="post-0" class="post no-results not-found">
# <p><?php _e( 'Apologies, but no results were found for the requested archive. ', 'theme_front' ); ?></p>
# </article>
msgid "Apologies, but no results were found for the requested archive. "
msgstr ""

# <h3 id="comments_title"><?php
# printf( _n( 'One Response to %2$s', '%1$s Responses to %2$s', get_comments_number(), 'theme_front' ),
# number_format_i18n( get_comments_number() ), '<em>' . get_the_title() . '</em>' );
msgid "%1$s Responses to %2$s"
msgstr ""

# <h3 id="comments_title"><?php
# printf( _n( 'One Response to %2$s', '%1$s Responses to %2$s', get_comments_number(), 'theme_front' ),
# number_format_i18n( get_comments_number() ), '<em>' . get_the_title() . '</em>' );
msgid "One Response to %2$s"
msgstr ""

# <?php if ( post_password_required() ) : ?>
# <p class="nopassword"><?php _e( 'This post is password protected. Enter the password to view any comments.', 'theme_front' ); ?></p>
# </section><!-- #comments -->
msgid "This post is password protected. Enter the password to view any comments."
msgstr ""

# <?php if ($comment->comment_approved == '0') : ?>
# <span class="unapproved"><?php _e('Your comment is awaiting moderation.','theme_front') ?></span>
# <?php endif; ?>
msgid "Your comment is awaiting moderation."
msgstr ""

# 'cancel_reply_link'    => __('Cancel reply','theme_front'),
# 'label_submit'         => __('Post Comment','theme_front'),
# );
msgid "Post Comment"
msgstr ""

# 'title_reply_to'       => __('Leave a Reply to %s','theme_front'),
# 'cancel_reply_link'    => __('Cancel reply','theme_front'),
# 'label_submit'         => __('Post Comment','theme_front'),
msgid "Cancel reply"
msgstr ""

# 'title_reply'          => __('Leave a Reply','theme_front'),
# 'title_reply_to'       => __('Leave a Reply to %s','theme_front'),
# 'cancel_reply_link'    => __('Cancel reply','theme_front'),
msgid "Leave a Reply to %s"
msgstr ""

# 'id_submit'            => 'submit',
# 'title_reply'          => __('Leave a Reply','theme_front'),
# 'title_reply_to'       => __('Leave a Reply to %s','theme_front'),
msgid "Leave a Reply"
msgstr ""

# 'logged_in_as'         => '<p class="logged-in-as">' . sprintf( __('Logged in as <a href="%1$s">%2$s</a>. <a href="%3$s" title="Log out of this account">Log out?</a>','theme_front'), admin_url( 'profile.php' ), $user_identity, wp_logout_url( apply_filters( 'the_permalink', get_permalink( $post_id ) ) ) ) . '</p>',
# 'comment_notes_before' => '<p class="comment-notes">' . __('Your email address will not be published.','theme_front') . ( $req ? $required_text : '' ) . '</p>',
# 'comment_notes_after'  => '',
msgid "Your email address will not be published."
msgstr ""

# 'must_log_in'          => '<p class="must-log-in">' . sprintf( __('You must be <a href="%s">logged in</a> to post a comment','theme_front'), wp_login_url( apply_filters( 'the_permalink', get_permalink( $post_id ) ) ) ) . '</p>',
# 'logged_in_as'         => '<p class="logged-in-as">' . sprintf( __('Logged in as <a href="%1$s">%2$s</a>. <a href="%3$s" title="Log out of this account">Log out?</a>','theme_front'), admin_url( 'profile.php' ), $user_identity, wp_logout_url( apply_filters( 'the_permalink', get_permalink( $post_id ) ) ) ) . '</p>',
# 'comment_notes_before' => '<p class="comment-notes">' . __('Your email address will not be published.','theme_front') . ( $req ? $required_text : '' ) . '</p>',
msgid "Logged in as <a href=\"%1$s\">%2$s</a>. <a href=\"%3$s\" title=\"Log out of this account\">Log out?</a>"
msgstr ""

# 'comment_field'        => '<p><textarea class="textarea" name="comment" id="comment" cols="70" rows="10" tabindex="4" aria-required="true"></textarea></p>',
# 'must_log_in'          => '<p class="must-log-in">' . sprintf( __('You must be <a href="%s">logged in</a> to post a comment','theme_front'), wp_login_url( apply_filters( 'the_permalink', get_permalink( $post_id ) ) ) ) . '</p>',
# 'logged_in_as'         => '<p class="logged-in-as">' . sprintf( __('Logged in as <a href="%1$s">%2$s</a>. <a href="%3$s" title="Log out of this account">Log out?</a>','theme_front'), admin_url( 'profile.php' ), $user_identity, wp_logout_url( apply_filters( 'the_permalink', get_permalink( $post_id ) ) ) ) . '</p>',
msgid "You must be <a href=\"%s\">logged in</a> to post a comment"
msgstr ""

# );
# $required_text = sprintf( ' ' . __('Required fields are marked %s','theme_front'), '<span class="required">*</span>' );
# $comment_args = array(
msgid "Required fields are marked %s"
msgstr ""

# 'url'    => '<p><input type="text" name="url" class="text_input" id="url" value="'.esc_attr($comment_author_url).'" size="22" tabindex="3"'.$aria_req.' />' .
# '<label for="url">' . __('Website','theme_front') .'</label></p>',
# );
msgid "Website"
msgstr ""

# 'email'  => '<p><input type="text" name="email" class="text_input" id="email" value="'.esc_attr($comment_author_email).'" size="22" tabindex="2"'.$aria_req.' />' .
# '<label for="email">' . __('Email','theme_front') . ( $req ? '<span class="required">*</span>' : '' ).'</label></p>',
# 'url'    => '<p><input type="text" name="url" class="text_input" id="url" value="'.esc_attr($comment_author_url).'" size="22" tabindex="3"'.$aria_req.' />' .
msgid "Email"
msgstr ""

# 'author' => '<p><input type="text" name="author" class="text_input" id="author" value="'.esc_attr($comment_author).'" size="22" tabindex="1"'.$aria_req.' />' .
# '<label for="author">' . __('Name','theme_front') . ( $req ? '<span class="required">*</span>' : '' ).'</label></p>',
# 'email'  => '<p><input type="text" name="email" class="text_input" id="email" value="'.esc_attr($comment_author_email).'" size="22" tabindex="2"'.$aria_req.' />' .
msgid "Name"
msgstr ""

# <div class="comment_meta">
# <?php printf( '<cite class="comment_author">%s</cite>', get_comment_author_link()) ?><?php edit_comment_link(__('(Edit)', 'theme_front' ),'  ','') ?>
# <time class="comment_time"><?php echo get_comment_date(); ?></time>
msgid "(Edit)"
msgstr ""

# <div class="nav-previous"><?php previous_post_link( '%link', '<span class="meta-nav">' . _x( '&larr;', 'Previous post link', 'theme_front' ) . '</span> %title' ); ?></div>
# <div class="nav-next"><?php next_post_link( '%link', '%title <span class="meta-nav">' . _x( '&rarr;', 'Next post link', 'theme_front' ) . '</span>' ); ?></div>
# </nav>
msgid "&rarr;"
msgstr ""

# <nav class="entry_navigation">
# <div class="nav-previous"><?php previous_post_link( '%link', '<span class="meta-nav">' . _x( '&larr;', 'Previous post link', 'theme_front' ) . '</span> %title' ); ?></div>
# <div class="nav-next"><?php next_post_link( '%link', '%title <span class="meta-nav">' . _x( '&rarr;', 'Next post link', 'theme_front' ) . '</span>' ); ?></div>
msgid "&larr;"
msgstr ""

# case 'tags':
# $content = '<h2>'.__('Tags Archives', 'theme_front').'</h2>';
# $content .= wp_tag_cloud(array(
msgid "Tags Archives"
msgstr ""

# 'bold' => false,
# 'blog' => __( 'Blog', 'theme_front' ),
# 'echo' => false
msgid "Blog"
msgstr ""

# $output = '<section id="about_the_author">'.
# '<h3>'.__('About the author','theme_front').'</h3>'.
# '<div class="author_content">'.
msgid "About the author"
msgstr ""

# ob_start();
# comments_popup_link(__('No Comments','theme_front'), __('1 Comment','theme_front'), __('% Comments','theme_front'),'');
# $output .= '<span class="comments">'.ob_get_clean().'</span>';
msgid "% Comments"
msgstr ""

# ob_start();
# comments_popup_link(__('No Comments','theme_front'), __('1 Comment','theme_front'), __('% Comments','theme_front'),'');
# $output .= '<span class="comments">'.ob_get_clean().'</span>';
msgid "1 Comment"
msgstr ""

# ob_start();
# comments_popup_link(__('No Comments','theme_front'), __('1 Comment','theme_front'), __('% Comments','theme_front'),'');
# $output .= '<span class="comments">'.ob_get_clean().'</span>';
msgid "No Comments"
msgstr ""

# }
# $outputs[] = '<span class="author">'.__('By: ', 'theme_front'). $author.'</span>';
# 
msgid "By: "
msgstr ""

# case 'tags':
# $content = get_the_tag_list(__('Tags: ', 'theme_front'),', ','');
# if(!empty($content)){
msgid "Tags: "
msgstr ""

# if(!empty($content)){
# $outputs[] = '<span class="categories">'.__('Posted in: ', 'theme_front').$content.'</span>';
# }
msgid "Posted in: "
msgstr ""

# if ( $paged >= 2 || $page >= 2 )
# $output .= ' | ' . sprintf( __( 'Page %s', 'theme_front' ), max( $paged, $page ) );
# 
msgid "Page %s"
msgstr ""

# if ($r->have_posts()){
# $output .= '<h3>'.__('Popular Portfolio','theme_front').'</h3>';
# $output .= '<section class="popular_portfolio_wrap">';
msgid "Popular Portfolio"
msgstr ""

# $related_post_found = true;
# $output .= '<h3>'.__('Related Portfolio','theme_front').'</h3>';
# $output .= '<section class="related_portfolio_wrap">';
msgid "Related Portfolio"
msgstr ""

# if ($r->have_posts()){
# $output .= '<h3>'.__('Recent Portfolio','theme_front').'</h3>';
# $output .= '<section class="recent_portfolio_wrap">';
msgid "Recent Portfolio"
msgstr ""

# elseif ( bbp_is_topic_merge() )
# $item[] = __( 'Merge', 'theme_front' );
# 
msgid "Merge"
msgstr ""

# if ( bbp_is_topic_split() )
# $item[] = __( 'Split', 'theme_front' );
# 
msgid "Split"
msgstr ""

# else if ( is_404() )
# $item['last'] = __( 'Page Not Found', 'theme_front' );
# 
msgid "Page Not Found"
msgstr ""

# 'title' => __( 'You are here: ', 'theme_front' ),
# 'home' => __( 'Home', 'theme_front' ),
# 'separator' => '&raquo;',
msgid "Home"
msgstr ""

# 'suffix' => '</p>',
# 'title' => __( 'You are here: ', 'theme_front' ),
# 'home' => __( 'Home', 'theme_front' ),
msgid "You are here: "
msgstr ""

# "id" => "archive_".$archive->name."_text",
# "default" => __("Archives for: '%s'",'theme_front'),
# 'rows' => '2',
msgid "Archives for: '%s'"
msgstr ""

# "id" => "taxonomy_text",
# "default" => __("Archive for: '%s'",'theme_front'),
# 'rows' => '2',
msgid "Archive for: '%s'"
msgstr ""

# "id" => "blog_text",
# "default" => __('Blog Archives','theme_front'),
# 'rows' => '2',
msgid "Blog Archives"
msgstr ""

# "id" => "author_text",
# "default" => __("Author Archive for: '%s'",'theme_front'),
# 'rows' => '2',
msgid "Author Archive for: '%s'"
msgstr ""

# "id" => "yearly_text",
# "default" => __("Yearly Archive for: '%s'",'theme_front'),
# 'rows' => '2',
msgid "Yearly Archive for: '%s'"
msgstr ""

# "id" => "weekly_text",
# "default" => __("Weekly Archive for: '%s'",'theme_front'),
# 'rows' => '2',
msgid "Weekly Archive for: '%s'"
msgstr ""

# "id" => "monthly_text",
# "default" => __("Monthly Archive for: '%s'",'theme_front'),
# 'rows' => '2',
msgid "Monthly Archive for: '%s'"
msgstr ""

# "id" => "daily_text",
# "default" => __("Daily Archive for: '%s'",'theme_front'),
# 'rows' => '2',
msgid "Daily Archive for: '%s'"
msgstr ""

# "id" => "tag_text",
# "default" => __("Tag Archive for: '%s'",'theme_front'),
# 'rows' => '2',
msgid "Tag Archive for: '%s'"
msgstr ""

# "id" => "category_text",
# "default" => __("Category Archive for: '%s'",'theme_front'),
# 'rows' => '2',
msgid "Category Archive for: '%s'"
msgstr ""

# "id" => "category_title",
# "default" => __('Archives','theme_front'),
# "size" => 50,
msgid "Archives"
msgstr ""

# "id" => "search_text",
# "default" => __("Search Results for: '%s'",'theme_front'),
# 'rows' => '2',
msgid "Search Results for: '%s'"
msgstr ""

# "id" => "404_text",
# "default" => __("Looks like the page you're looking for isn't here anymore. Try using the search box or sitemap below.",'theme_front'),
# 'rows' => '2',
msgid "Looks like the page you're looking for isn't here anymore. Try using the search box or sitemap below."
msgstr ""

# "id" => "404_title",
# "default" => __('404 - Not Found','theme_front'),
# "size" => 50,
msgid "404 - Not Found"
msgstr ""

# "id" => "nav2select_indentString",
# "default" => __("&ndash;",'theme_front'),
# "type" => "text"
msgid "&ndash;"
msgstr ""

# "id" => "nav2select_defaultText",
# "default" => __("Navigate to...",'theme_front'),
# "htmlspecialchars" => true,
msgid "Navigate to..."
msgstr ""

# "size" => 30,
# "default" => __('Show:','theme_front'),
# "type" => "text"
msgid "Show:"
msgstr ""

# "id" => "read_more_text",
# "default" => __("Read more &raquo;",'theme_front'),
# "type" => "text",
msgid "Read more &raquo;"
msgstr ""

# extract( $args );
# $title = apply_filters('widget_title', empty($instance['title']) ? __('Authors', 'theme_front') : $instance['title'], $instance, $this->id_base);
# 
msgid "Authors"
msgstr ""

# 
# $title = apply_filters('widget_title', empty($instance['title']) ? __('Related Portfolios', 'theme_front') : $instance['title'], $instance, $this->id_base);
# if ( !$number = (int) $instance['number'] )
msgid "Related Portfolios"
msgstr ""

# 
# $title = apply_filters('widget_title', empty($instance['title']) ? __('Recent Posts', 'theme_front') : $instance['title'], $instance, $this->id_base);
# if ( !$number = (int) $instance['number'] )
msgid "Recent Posts"
msgstr ""

# 
# $title = apply_filters('widget_title', empty($instance['title']) ? __('Popular Posts', 'theme_front') : $instance['title'], $instance, $this->id_base);
# if ( !$number = (int) $instance['number'] )
msgid "Popular Posts"
msgstr ""

# extract( $args );
# $title = apply_filters('widget_title', empty($instance['title']) ? __('Email Us', 'theme_front') : $instance['title'], $instance, $this->id_base);
# $email= $instance['email'];
msgid "Email Us"
msgstr ""

# 
# $title = apply_filters('widget_title', empty($instance['title']) ? __('Related Posts', 'theme_front') : $instance['title'], $instance, $this->id_base);
# if ( !$number = (int) $instance['number'] )
msgid "Related Posts"
msgstr ""

# extract( $args );
# $title = apply_filters('widget_title', empty($instance['title']) ? __('Photos on flickr', 'theme_front') : $instance['title'], $instance, $this->id_base);
# $type = empty( $instance['type'] ) ? 'user' : $instance['type'];
msgid "Photos on flickr"
msgstr ""

# extract( $args );
# $title = apply_filters('widget_title', empty($instance['title']) ? __('Contact Us', 'theme_front') : $instance['title'], $instance, $this->id_base);
# $color = $instance['color'];
msgid "Contact Us"
msgstr ""

# extract( $args );
# $title = apply_filters('widget_title', empty($instance['title']) ? __('Recent Tweets', 'theme_front') : $instance['title'], $instance, $this->id_base);
# $titlelink= $instance ['titlelink'];
msgid "Recent Tweets"
msgstr ""

# if(1 < count($languages)){
# echo isset($before) ? $before : __('This post is also available in: ', 'theme_front');
# foreach($languages as $l){
msgid "This post is also available in: "
msgstr ""

# 
# wpml_register_string( THEME_NAME , 'Social Icon Widget Alt Title', __('Follow Us on','theme_front'));
# 
msgid "Follow Us on"
msgstr ""

# $output .= '<div class="inner">';
# $output .= '<h1>'.__('Sign Up Now','theme_front').'</h1>';
# $output .= '</div>';
msgid "Sign Up Now"
msgstr ""

# if(!is_file($file)){
# return new WP_Error('file_is_not_exists', __('File is not exists','theme_front'));
# }
msgid "File is not exists"
msgstr ""

# if ( empty($info) || !in_array($info[2], array(IMAGETYPE_GIF, IMAGETYPE_JPEG, IMAGETYPE_PNG))) // only gif, jpeg and png images can reliably be displayed
# return new WP_Error('image_type_is_not_correctly', __('Image type is not correctly','theme_front'));
# 
msgid "Image type is not correctly"
msgstr ""

# if ( !preg_match('!^image/!', get_post_mime_type( $this->attachment_id ))) {
# return new WP_Error('attachment_is_not_image', __('Attachment is not image','theme_front'));
# }
msgid "Attachment is not image"
msgstr ""

# if ( !imagegif( $newimage, $destfilename ) )
# return new WP_Error('resize_path_invalid', __('Resize path invalid','theme_front'));
# } elseif ( IMAGETYPE_PNG == $orig_type ) {
msgid "Resize path invalid"
msgstr ""

# if ( !$dims )
# return new WP_Error( 'error_getting_dimensions', __('Could not calculate resized image dimensions','theme_front') );
# list($dst_x, $dst_y, $src_x, $src_y, $dst_w, $dst_h, $src_w, $src_h) = $dims;
msgid "Could not calculate resized image dimensions"
msgstr ""

# if ( !$size )
# return new WP_Error('invalid_image', __('Could not read image size','theme_front'), $file);
# 
msgid "Could not read image size"
msgstr ""

# function get_the_author_posts_link(){
# return '<a href="' . get_author_posts_url(get_the_author_meta( 'ID' )) . '" title="' . esc_attr( sprintf(__('Visit %s&#8217;s all posts','theme_front'), get_the_author()) ) . '" rel="author">' . get_the_author() . '</a>';
# }
msgid "Visit %s&#8217;s all posts"
msgstr ""

# $body .= __('Email: ','theme_front').$email."\n\n";
# $body .= __('Messages: ','theme_front').$content;
# $headers = "From: \"{$name}\" <{$email}>\n" . "Content-Type: text/plain; charset=\"" . get_option('blog_charset') . "\"\n";
msgid "Messages: "
msgstr ""

# $body .= __('Name: ','theme_front').$name."\n\n";
# $body .= __('Email: ','theme_front').$email."\n\n";
# $body .= __('Messages: ','theme_front').$content;
msgid "Email: "
msgstr ""

# $body = __('Site: ','theme_front').$sitename.' ('.$siteurl.')'."\n\n";
# $body .= __('Name: ','theme_front').$name."\n\n";
# $body .= __('Email: ','theme_front').$email."\n\n";
msgid "Name: "
msgstr ""

# $subject = sprintf(__('%1$s\'s message from %2$s','theme_front'),$sitename,$name);
# $body = __('Site: ','theme_front').$sitename.' ('.$siteurl.')'."\n\n";
# $body .= __('Name: ','theme_front').$name."\n\n";
msgid "Site: "
msgstr ""

# if($error == false){
# $subject = sprintf(__('%1$s\'s message from %2$s','theme_front'),$sitename,$name);
# $body = __('Site: ','theme_front').$sitename.' ('.$siteurl.')'."\n\n";
msgid "%1$s's message from %2$s"
msgstr ""

# if(in_array('portfolios',$shows)){
# $output .= '<h2>'.__('Portfolios','theme_front').'</h2>';
# $output .= sitemap_portfolios($atts);
msgid "Portfolios"
msgstr ""

# if(in_array('posts',$shows)){
# $output .= '<h2>'.__('Blog Posts','theme_front').'</h2>';
# $output .= sitemap_posts($atts);
msgid "Blog Posts"
msgstr ""

# if(in_array('categories',$shows)){
# $output .= '<h2>'.__('Category Archives','theme_front').'</h2>';
# $output .= sitemap_categories($atts);
msgid "Category Archives"
msgstr ""

# if(in_array('pages',$shows)){
# $output .= '<h2>'.__('Pages','theme_front').'</h2>';
# $output .= sitemap_pages($atts);
msgid "Pages"
msgstr ""

# if($show_feed === true || $show_feed == 'true'){
# $feed = __( 'RSS', 'theme_front' );
# }else{
msgid "RSS"
msgstr ""

# function theme_shortcode_divider_top() {
# return '<div class="divider top"><a href="#">'.__('Top','theme_front').'</a></div>';
# }
msgid "Top"
msgstr ""

# if(empty($current)){
# $output .= '<a class="current" data-value="all" href="#">'.__('All','theme_front').'</a>';
# }else{
msgid "All"
msgstr ""

# $output .=  '<li class="recentcomments">' .
# sprintf(_x('%1$s on %2$s', 'widgets', 'theme_front'), get_comment_author_link($comment->comment_ID), '<a href="' . esc_url( get_comment_link($comment->comment_ID) ) . '">' . get_the_title($comment->comment_post_ID) . '</a>') . '</li>';
# }
msgid "%1$s on %2$s"
msgstr ""

# if($dropdown === 'true'){
# $cat_args['show_option_none'] = __('Select Category','theme_front');
# $output = wp_dropdown_categories(apply_filters('widget_categories_dropdown_args', $cat_args));
msgid "Select Category"
msgstr ""

# if($dropdown === 'true'){
# $output = '<select name="archive-dropdown" onchange=\'document.location.href=this.options[this.selectedIndex].value;\'> <option value="">'.esc_attr(__('Select Month','theme_front')).'</option> '.wp_get_archives(apply_filters('widget_archives_dropdown_args', array('type' => 'monthly', 'format' => 'option', 'show_post_count' => $count,'echo'=> 0))).' </select>';
# }else{
msgid "Select Month"
msgstr ""

# $days_ago_text = __('about %d days ago','theme_front');
# $view_text = __('view tweet on twitter','theme_front');
# 
msgid "view tweet on twitter"
msgstr ""

# $a_day_ago_text = __('about a day ago','theme_front');
# $days_ago_text = __('about %d days ago','theme_front');
# $view_text = __('view tweet on twitter','theme_front');
msgid "about %d days ago"
msgstr ""

# $hours_ago_text = __('about %d hours ago','theme_front');
# $a_day_ago_text = __('about a day ago','theme_front');
# $days_ago_text = __('about %d days ago','theme_front');
msgid "about a day ago"
msgstr ""

# $a_hours_ago_text = __('about an hour ago','theme_front');
# $hours_ago_text = __('about %d hours ago','theme_front');
# $a_day_ago_text = __('about a day ago','theme_front');
msgid "about %d hours ago"
msgstr ""

# $minutes_ago_text = __('about %d minutes ago','theme_front');
# $a_hours_ago_text = __('about an hour ago','theme_front');
# $hours_ago_text = __('about %d hours ago','theme_front');
msgid "about an hour ago"
msgstr ""

# $a_minutes_ago_text = __('about a minute ago','theme_front');
# $minutes_ago_text = __('about %d minutes ago','theme_front');
# $a_hours_ago_text = __('about an hour ago','theme_front');
msgid "about %d minutes ago"
msgstr ""

# $seconds_ago_text = __('about %d seconds ago','theme_front');
# $a_minutes_ago_text = __('about a minute ago','theme_front');
# $minutes_ago_text = __('about %d minutes ago','theme_front');
msgid "about a minute ago"
msgstr ""

# $just_now_text = __('just now','theme_front');
# $seconds_ago_text = __('about %d seconds ago','theme_front');
# $a_minutes_ago_text = __('about a minute ago','theme_front');
msgid "about %d seconds ago"
msgstr ""

# $id = rand(1,1000);
# $just_now_text = __('just now','theme_front');
# $seconds_ago_text = __('about %d seconds ago','theme_front');
msgid "just now"
msgstr ""

# $search_str = __('Search..', 'theme_front');
# $search_button_str = __('Search', 'theme_front');
# $button_class = apply_filters( 'theme_css_class', 'button' );
msgid "Search"
msgstr ""

# 
# $search_str = __('Search..', 'theme_front');
# $search_button_str = __('Search', 'theme_front');
msgid "Search.."
msgstr ""

# }else{
# $submit_str = __('Submit','theme_front');
# }
msgid "Submit"
msgstr ""

# $name_str = __('Name *','theme_front');
# $email_str = __('Email *','theme_front');
# 
msgid "Email *"
msgstr ""

# }
# $name_str = __('Name *','theme_front');
# $email_str = __('Email *','theme_front');
msgid "Name *"
msgstr ""

# if(empty($success)){
# $success = __('Your message was successfully sent. <strong>Thank You!</strong>','theme_front');
# }
msgid "Your message was successfully sent. <strong>Thank You!</strong>"
msgstr ""

# 'prev_text' => __('&laquo;','theme_front'),
# 'dotright_text' => __('...','theme_front'),
# 'dotleft_text' => __('...','theme_front'),
msgid "..."
msgstr ""

# 'next_text' => __('&raquo;','theme_front'),
# 'prev_text' => __('&laquo;','theme_front'),
# 'dotright_text' => __('...','theme_front'),
msgid "&laquo;"
msgstr ""

# 'last_text' => __('Last &raquo;','theme_front'),
# 'next_text' => __('&raquo;','theme_front'),
# 'prev_text' => __('&laquo;','theme_front'),
msgid "&raquo;"
msgstr ""

# 'first_text' => __('&laquo; First','theme_front'),
# 'last_text' => __('Last &raquo;','theme_front'),
# 'next_text' => __('&raquo;','theme_front'),
msgid "Last &raquo;"
msgstr ""

# 'page_text' => '%PAGE_NUMBER%',
# 'first_text' => __('&laquo; First','theme_front'),
# 'last_text' => __('Last &raquo;','theme_front'),
msgid "&laquo; First"
msgstr ""

# $image_src = theme_get_image_src(array('type'=>'attachment_id','value'=>get_post_thumbnail_id()), array(470));
# $output .= '<div class="masonry_item_image"><a href="'.get_permalink().'" title="'.sprintf( __("Permanent Link to %s", 'theme_front'), get_the_title() ).'"><img src="'.$image_src.'" alt="'.get_the_title().'" /><span class="masonry_item_image_overlay"></span></a></div>';
# }
msgid "Permanent Link to %s"
msgstr ""

# <?php wp_link_pages( array( 'before' => '<div class="page-link">' . __( 'Pages:', 'theme_front' ), 'after' => '</div>' ) ); ?>
# <?php edit_post_link(__('Edit', 'theme_front'),'<footer><p class="entry_edit">','</p></footer>'); ?>
# <div class="clearboth"></div>
msgid "Edit"
msgstr ""

# <?php the_content(); ?>
# <?php wp_link_pages( array( 'before' => '<div class="page-link">' . __( 'Pages:', 'theme_front' ), 'after' => '</div>' ) ); ?>
# <?php edit_post_link(__('Edit', 'theme_front'),'<footer><p class="entry_edit">','</p></footer>'); ?>
msgid "Pages:"
msgstr ""